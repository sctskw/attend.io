// Code generated by go-swagger; DO NOT EDIT.

package attendees

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetAttendeesByEventIDHandlerFunc turns a function with the right signature into a get attendees by event Id handler
type GetAttendeesByEventIDHandlerFunc func(GetAttendeesByEventIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetAttendeesByEventIDHandlerFunc) Handle(params GetAttendeesByEventIDParams) middleware.Responder {
	return fn(params)
}

// GetAttendeesByEventIDHandler interface for that can handle valid get attendees by event Id params
type GetAttendeesByEventIDHandler interface {
	Handle(GetAttendeesByEventIDParams) middleware.Responder
}

// NewGetAttendeesByEventID creates a new http.Handler for the get attendees by event Id operation
func NewGetAttendeesByEventID(ctx *middleware.Context, handler GetAttendeesByEventIDHandler) *GetAttendeesByEventID {
	return &GetAttendeesByEventID{Context: ctx, Handler: handler}
}

/*GetAttendeesByEventID swagger:route GET /attendees/{eventId} attendees getAttendeesByEventId

GetAttendeesByEventID get attendees by event Id API

*/
type GetAttendeesByEventID struct {
	Context *middleware.Context
	Handler GetAttendeesByEventIDHandler
}

func (o *GetAttendeesByEventID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetAttendeesByEventIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
