// Code generated by go-swagger; DO NOT EDIT.

package talks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sctskw/attend.io/models"
)

// DeleteTalkByIDNoContentCode is the HTTP code returned for type DeleteTalkByIDNoContent
const DeleteTalkByIDNoContentCode int = 204

/*DeleteTalkByIDNoContent Talk was deleted.

swagger:response deleteTalkByIdNoContent
*/
type DeleteTalkByIDNoContent struct {
}

// NewDeleteTalkByIDNoContent creates DeleteTalkByIDNoContent with default headers values
func NewDeleteTalkByIDNoContent() *DeleteTalkByIDNoContent {

	return &DeleteTalkByIDNoContent{}
}

// WriteResponse to the client
func (o *DeleteTalkByIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

/*DeleteTalkByIDDefault generic error response

swagger:response deleteTalkByIdDefault
*/
type DeleteTalkByIDDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewDeleteTalkByIDDefault creates DeleteTalkByIDDefault with default headers values
func NewDeleteTalkByIDDefault(code int) *DeleteTalkByIDDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteTalkByIDDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete talk by Id default response
func (o *DeleteTalkByIDDefault) WithStatusCode(code int) *DeleteTalkByIDDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete talk by Id default response
func (o *DeleteTalkByIDDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete talk by Id default response
func (o *DeleteTalkByIDDefault) WithPayload(payload *models.Error) *DeleteTalkByIDDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete talk by Id default response
func (o *DeleteTalkByIDDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTalkByIDDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
