// Code generated by go-swagger; DO NOT EDIT.

package talks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sctskw/attend.io/models"
)

// PostTalksOKCode is the HTTP code returned for type PostTalksOK
const PostTalksOKCode int = 200

/*PostTalksOK Talk was created

swagger:response postTalksOK
*/
type PostTalksOK struct {

	/*
	  In: Body
	*/
	Payload *models.Talk `json:"body,omitempty"`
}

// NewPostTalksOK creates PostTalksOK with default headers values
func NewPostTalksOK() *PostTalksOK {

	return &PostTalksOK{}
}

// WithPayload adds the payload to the post talks o k response
func (o *PostTalksOK) WithPayload(payload *models.Talk) *PostTalksOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post talks o k response
func (o *PostTalksOK) SetPayload(payload *models.Talk) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTalksOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostTalksDefault generic error response

swagger:response postTalksDefault
*/
type PostTalksDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewPostTalksDefault creates PostTalksDefault with default headers values
func NewPostTalksDefault(code int) *PostTalksDefault {
	if code <= 0 {
		code = 500
	}

	return &PostTalksDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the post talks default response
func (o *PostTalksDefault) WithStatusCode(code int) *PostTalksDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the post talks default response
func (o *PostTalksDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the post talks default response
func (o *PostTalksDefault) WithPayload(payload *models.Error) *PostTalksDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post talks default response
func (o *PostTalksDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostTalksDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
