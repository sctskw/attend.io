// Code generated by go-swagger; DO NOT EDIT.

package talks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/sctskw/attend.io/models"
)

// AddAttendeeToTalkOKCode is the HTTP code returned for type AddAttendeeToTalkOK
const AddAttendeeToTalkOKCode int = 200

/*AddAttendeeToTalkOK Attendee was Added

swagger:response addAttendeeToTalkOK
*/
type AddAttendeeToTalkOK struct {

	/*
	  In: Body
	*/
	Payload *models.Talk `json:"body,omitempty"`
}

// NewAddAttendeeToTalkOK creates AddAttendeeToTalkOK with default headers values
func NewAddAttendeeToTalkOK() *AddAttendeeToTalkOK {

	return &AddAttendeeToTalkOK{}
}

// WithPayload adds the payload to the add attendee to talk o k response
func (o *AddAttendeeToTalkOK) WithPayload(payload *models.Talk) *AddAttendeeToTalkOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add attendee to talk o k response
func (o *AddAttendeeToTalkOK) SetPayload(payload *models.Talk) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAttendeeToTalkOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*AddAttendeeToTalkDefault generic error response

swagger:response addAttendeeToTalkDefault
*/
type AddAttendeeToTalkDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewAddAttendeeToTalkDefault creates AddAttendeeToTalkDefault with default headers values
func NewAddAttendeeToTalkDefault(code int) *AddAttendeeToTalkDefault {
	if code <= 0 {
		code = 500
	}

	return &AddAttendeeToTalkDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the add attendee to talk default response
func (o *AddAttendeeToTalkDefault) WithStatusCode(code int) *AddAttendeeToTalkDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the add attendee to talk default response
func (o *AddAttendeeToTalkDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the add attendee to talk default response
func (o *AddAttendeeToTalkDefault) WithPayload(payload *models.Error) *AddAttendeeToTalkDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the add attendee to talk default response
func (o *AddAttendeeToTalkDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *AddAttendeeToTalkDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
