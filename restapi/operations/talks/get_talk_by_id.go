// Code generated by go-swagger; DO NOT EDIT.

package talks

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// GetTalkByIDHandlerFunc turns a function with the right signature into a get talk by Id handler
type GetTalkByIDHandlerFunc func(GetTalkByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTalkByIDHandlerFunc) Handle(params GetTalkByIDParams) middleware.Responder {
	return fn(params)
}

// GetTalkByIDHandler interface for that can handle valid get talk by Id params
type GetTalkByIDHandler interface {
	Handle(GetTalkByIDParams) middleware.Responder
}

// NewGetTalkByID creates a new http.Handler for the get talk by Id operation
func NewGetTalkByID(ctx *middleware.Context, handler GetTalkByIDHandler) *GetTalkByID {
	return &GetTalkByID{Context: ctx, Handler: handler}
}

/*GetTalkByID swagger:route GET /talks/{id} talks getTalkById

Retrieve a Talk by ID

*/
type GetTalkByID struct {
	Context *middleware.Context
	Handler GetTalkByIDHandler
}

func (o *GetTalkByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetTalkByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
